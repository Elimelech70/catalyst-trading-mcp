# Name of Application: Catalyst Trading System
# Name of file: docker-compose.yml
# Version: 5.1.0
# Last Updated: 2025-10-13
# Purpose: Complete production docker-compose configuration

# REVISION HISTORY:
# v5.1.0 (2025-10-13) - All services updated to production-ready versions
#   - Scanner v5.4.0 (gold standard)
#   - Trading v5.0.1 (gold standard)
#   - Risk Manager v5.0.0 (gold standard)
#   - News v5.3.1 (SQL fix)
#   - Technical v5.1.0 (error handling)
#   - Pattern v5.1.0 (error handling)
#   - Orchestration v5.1.0 (MCP with error handling)
#   - Reporting v5.1.0 (error handling)
#
# Description:
# Production-ready docker-compose with all 8 services plus PostgreSQL.
# Uses normalized schema v5.0 with proper error handling across all services.

version: '3.8'

services:
  # ==========================================================================
  # DATABASE
  # ==========================================================================
  postgres:
    image: postgres:15-alpine
    container_name: catalyst-postgres
    environment:
      POSTGRES_DB: catalyst_trading
      POSTGRES_USER: catalyst
      POSTGRES_PASSWORD: catalyst
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema:/docker-entrypoint-initdb.d
    networks:
      - catalyst-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalyst -d catalyst_trading"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # ORCHESTRATION SERVICE (MCP - Port 5000)
  # ==========================================================================
  orchestration:
    build:
      context: ./services/orchestration
      dockerfile: Dockerfile
    container_name: catalyst-orchestration
    environment:
      SERVICE_PORT: 5000
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      SCANNER_URL: http://scanner:5001
      PATTERN_URL: http://pattern:5002
      TECHNICAL_URL: http://technical:5003
      RISK_URL: http://risk-manager:5004
      TRADING_URL: http://trading:5005
      NEWS_URL: http://news:5008
      REPORTING_URL: http://reporting:5009
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"
    volumes:
      - ./services/orchestration:/app
      - orchestration_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # SCANNER SERVICE (REST - Port 5001)
  # ==========================================================================
  scanner:
    build:
      context: ./services/scanner
      dockerfile: Dockerfile
    container_name: catalyst-scanner
    environment:
      SERVICE_PORT: 5001
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY:-}
      POLYGON_API_KEY: ${POLYGON_API_KEY:-}
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"
    volumes:
      - ./services/scanner:/app
      - scanner_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # PATTERN SERVICE (REST - Port 5002)
  # ==========================================================================
  pattern:
    build:
      context: ./services/pattern
      dockerfile: Dockerfile
    container_name: catalyst-pattern
    environment:
      SERVICE_PORT: 5002
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"
    volumes:
      - ./services/pattern:/app
      - pattern_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # TECHNICAL SERVICE (REST - Port 5003)
  # ==========================================================================
  technical:
    build:
      context: ./services/technical
      dockerfile: Dockerfile
    container_name: catalyst-technical
    environment:
      SERVICE_PORT: 5003
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"
    volumes:
      - ./services/technical:/app
      - technical_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # RISK MANAGER SERVICE (REST - Port 5004)
  # ==========================================================================
  risk-manager:
    build:
      context: ./services/risk-manager
      dockerfile: Dockerfile
    container_name: catalyst-risk-manager
    environment:
      SERVICE_PORT: 5004
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      MAX_POSITION_SIZE: 1000
      MAX_DAILY_LOSS: 1000
      MAX_SECTOR_EXPOSURE: 0.3
      PYTHONUNBUFFERED: 1
    ports:
      - "5004:5004"
    volumes:
      - ./services/risk-manager:/app
      - risk_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5004/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # TRADING SERVICE (REST - Port 5005)
  # ==========================================================================
  trading:
    build:
      context: ./services/trading
      dockerfile: Dockerfile
    container_name: catalyst-trading
    environment:
      SERVICE_PORT: 5005
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      ALPACA_API_KEY: ${ALPACA_API_KEY:-}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY:-}
      ALPACA_BASE_URL: ${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
      PYTHONUNBUFFERED: 1
    ports:
      - "5005:5005"
    volumes:
      - ./services/trading:/app
      - trading_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
      risk-manager:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # NEWS SERVICE (REST - Port 5008)
  # ==========================================================================
  news:
    build:
      context: ./services/news
      dockerfile: Dockerfile
    container_name: catalyst-news
    environment:
      SERVICE_PORT: 5008
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      BENZINGA_API_KEY: ${BENZINGA_API_KEY:-}
      ALPHA_VANTAGE_KEY: ${ALPHA_VANTAGE_KEY:-}
      PYTHONUNBUFFERED: 1
    ports:
      - "5008:5008"
    volumes:
      - ./services/news:/app
      - news_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5008/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================================================
  # REPORTING SERVICE (REST - Port 5009)
  # ==========================================================================
  reporting:
    build:
      context: ./services/reporting
      dockerfile: Dockerfile
    container_name: catalyst-reporting
    environment:
      SERVICE_PORT: 5009
      DATABASE_URL: postgresql://catalyst:catalyst@postgres:5432/catalyst_trading
      PYTHONUNBUFFERED: 1
    ports:
      - "5009:5009"
    volumes:
      - ./services/reporting:/app
      - reporting_logs:/app/logs
    networks:
      - catalyst-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5009/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ==========================================================================
# NETWORKS
# ==========================================================================
networks:
  catalyst-network:
    driver: bridge
    name: catalyst-network

# ==========================================================================
# VOLUMES
# ==========================================================================
volumes:
  postgres_data:
    name: catalyst-postgres-data
  orchestration_logs:
    name: catalyst-orchestration-logs
  scanner_logs:
    name: catalyst-scanner-logs
  pattern_logs:
    name: catalyst-pattern-logs
  technical_logs:
    name: catalyst-technical-logs
  risk_logs:
    name: catalyst-risk-logs
  trading_logs:
    name: catalyst-trading-logs
  news_logs:
    name: catalyst-news-logs
  reporting_logs:
    name: catalyst-reporting-logs
