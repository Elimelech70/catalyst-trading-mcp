# Name of Application: Catalyst Trading System
# Name of file: docker-compose.yml
# Version: 4.1.0
# Last Updated: 2025-08-31
# Purpose: Docker Compose configuration for v41 services

# REVISION HISTORY:
# v4.1.0 (2025-08-31) - Updated for v41 service architecture
# - All services aligned with v41 naming
# - Health checks and proper dependencies
# - Volume management for logs and data

# Description of Service:
# Complete docker-compose setup for Catalyst Trading MCP system

version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: catalyst-postgres
    environment:
      POSTGRES_DB: catalyst_trading
      POSTGRES_USER: catalyst
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalyst"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: catalyst-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Orchestration Service (v41)
  orchestration:
    build:
      context: ./services/orchestration
      dockerfile: Dockerfile
    container_name: catalyst-orchestration
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      MCP_MODE: production
      SERVICE_PORT: 5000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./logs/orchestration:/app/logs
    restart: unless-stopped

  # Scanner Service (v41)
  scanner:
    build:
      env_file:
        - .env
      context: ./services/scanner
      dockerfile: Dockerfile
    container_name: catalyst-scanner
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      NEWS_URL: http://news:5008
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
      SERVICE_PORT: 5001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5001:5001"
    volumes:
      - ./logs/scanner:/app/logs
    restart: unless-stopped

  # News Scanner Service
  news:
    build:
      context: ./services/news
      dockerfile: Dockerfile
    container_name: catalyst-news
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      SERVICE_PORT: 5008
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5008:5008"
    volumes:
      - ./logs/news:/app/logs
    restart: unless-stopped

  # Pattern Detection Service
  pattern:
    build:
      context: ./services/pattern
      dockerfile: Dockerfile
    container_name: catalyst-pattern
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      SERVICE_PORT: 5002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5002:5002"
    volumes:
      - ./logs/pattern:/app/logs
    restart: unless-stopped

  # Risk Manager Service
  risk-manager:
    build:
      context: ./services/risk-manager
      dockerfile: Dockerfile
    container_name: catalyst-risk
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      SERVICE_PORT: 5004
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5004:5004"
    volumes:
      - ./logs/risk:/app/logs
    restart: unless-stopped

  # Trading Service
  trading:
    build:
      context: ./services/trading
      dockerfile: Dockerfile
    container_name: catalyst-trading
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
      SERVICE_PORT: 5005
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      risk-manager:
        condition: service_started
    ports:
      - "5005:5005"
    volumes:
      - ./logs/trading:/app/logs
    restart: unless-stopped

  # Reporting Service
  reporting:
    build:
      context: ./services/reporting
      dockerfile: Dockerfile
    container_name: catalyst-reporting
    environment:
      DATABASE_URL: postgresql://catalyst:${DB_PASSWORD:-secure_password}@postgres:5432/catalyst_trading
      REDIS_URL: redis://redis:6379/0
      SERVICE_PORT: 5009
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5009:5009"
    volumes:
      - ./logs/reporting:/app/logs
      - ./reports:/app/reports
    restart: unless-stopped

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Networks (optional, uses default bridge if not specified)
networks:
  default:
    name: catalyst-network
    driver: bridge