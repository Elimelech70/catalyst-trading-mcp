# ============================================================================
# Catalyst Trading System - Production Cron Configuration
# ============================================================================
# Install with: crontab -e (then paste this content)
# View active: crontab -l
# Logs: grep CRON /var/log/syslog
#
# IMPORTANT: Adjust times for your timezone (these are EST/EDT)
# Server timezone: Perth (AWST) = UTC+8
# Market hours: US Markets 9:30 AM - 4:00 PM EST
# Perth times: 10:30 PM - 5:00 AM AWST (next day)
# ============================================================================

# Environment Variables (adjust paths as needed)
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
SHELL=/bin/bash
HOME=/root
CATALYST_HOME=/root/catalyst-trading-mcp

# ============================================================================
# MARKET HOURS AUTOMATION (Perth Time for US Markets)
# ============================================================================

# Pre-market startup (9:00 PM Perth = 4:00 AM EST)
0 21 * * 1-5 cd $CATALYST_HOME && docker-compose up -d >> /var/log/catalyst/startup.log 2>&1

# Market open notification (10:30 PM Perth = 9:30 AM EST)
30 22 * * 1-5 cd $CATALYST_HOME && curl -X POST http://localhost:5006/api/v1/workflow/start -H "Content-Type: application/json" -d '{"mode": "normal"}' >> /var/log/catalyst/trading.log 2>&1

# Periodic workflow triggers during market hours (every 30 minutes)
0,30 23 * * 1-5 cd $CATALYST_HOME && curl -X POST http://localhost:5006/api/v1/workflow/start -H "Content-Type: application/json" -d '{"mode": "normal"}' >> /var/log/catalyst/trading.log 2>&1
0,30 0-4 * * 2-6 cd $CATALYST_HOME && curl -X POST http://localhost:5006/api/v1/workflow/start -H "Content-Type: application/json" -d '{"mode": "normal"}' >> /var/log/catalyst/trading.log 2>&1

# Market close operations (5:00 AM Perth = 4:00 PM EST)
0 5 * * 2-6 cd $CATALYST_HOME && curl -X POST http://localhost:5006/api/v1/workflow/start -H "Content-Type: application/json" -d '{"mode": "conservative", "max_positions": 3}' >> /var/log/catalyst/trading.log 2>&1

# After-hours shutdown (9:00 AM Perth = 8:00 PM EST) 
0 9 * * 2-6 cd $CATALYST_HOME && docker-compose stop >> /var/log/catalyst/shutdown.log 2>&1

# ============================================================================
# SYSTEM MAINTENANCE
# ============================================================================

# Health check every 15 minutes (24/7)
*/15 * * * * cd $CATALYST_HOME && /root/catalyst-trading-mcp/scripts/health-check.sh >> /var/log/catalyst/health.log 2>&1

# Database backup (daily at 2:00 AM Perth)
0 2 * * * cd $CATALYST_HOME && docker-compose exec -T postgres pg_dump -U catalyst_user -d catalyst_trading | gzip > /backups/catalyst/catalyst_$(date +\%Y\%m\%d_\%H\%M\%S).sql.gz 2>&1

# Log rotation and cleanup (weekly on Sunday)
0 3 * * 0 find /var/log/catalyst -name "*.log" -mtime +7 -delete
0 3 * * 0 find /backups/catalyst -name "*.sql.gz" -mtime +30 -delete

# System report (daily at 6:00 AM Perth)
0 6 * * * cd $CATALYST_HOME && docker-compose exec -T workflow curl http://localhost:5006/api/v1/workflow/history?limit=50 | python3 -m json.tool > /var/log/catalyst/daily_report_$(date +\%Y\%m\%d).json 2>&1

# ============================================================================
# MONITORING & ALERTS
# ============================================================================

# Check if services are down and restart if needed (every 5 minutes)
*/5 * * * * cd $CATALYST_HOME && docker-compose ps | grep -q "Exit" && docker-compose up -d >> /var/log/catalyst/auto-restart.log 2>&1

# ============================================================================
# DEVELOPMENT & TESTING (Optional - Uncomment if needed)
# ============================================================================

# Test workflow run (every day at noon Perth time)
# 0 12 * * * cd $CATALYST_HOME && curl -X POST http://localhost:5006/api/v1/workflow/start -H "Content-Type: application/json" -d '{"mode": "conservative", "max_positions": 1}' >> /var/log/catalyst/test.log 2>&1
