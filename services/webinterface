import React, { useState, useEffect } from 'react';
import { Activity, TrendingUp, AlertTriangle, BarChart3, Settings, Play, Square, Zap, Monitor } from 'lucide-react';

const CatalystDashboard = () => {
  const [systemStatus, setSystemStatus] = useState('active');
  const [positions, setPositions] = useState([
    { symbol: 'AAPL', pnl: '+2.3%', price: '$179.54', side: 'LONG' },
    { symbol: 'TSLA', pnl: '-0.8%', price: '$246.91', side: 'LONG' },
    { symbol: 'NVDA', pnl: '+1.2%', price: '$439.85', side: 'SHORT' }
  ]);

  const [candidates, setCandidates] = useState([
    { symbol: 'META', catalyst: 'Earnings Beat', confidence: '92%', signal: 'BUY' },
    { symbol: 'GOOGL', catalyst: 'AI News', confidence: '87%', signal: 'BUY' },
    { symbol: 'AMZN', catalyst: 'Cloud Growth', confidence: '84%', signal: 'BUY' }
  ]);

  const [services, setServices] = useState({
    orchestration: 'healthy',
    scanner: 'healthy', 
    news: 'healthy',
    pattern: 'warning',
    technical: 'healthy',
    trading: 'healthy'
  });

  const StatusBadge = ({ status }) => {
    const colors = {
      healthy: 'bg-green-100 text-green-800',
      warning: 'bg-yellow-100 text-yellow-800',
      error: 'bg-red-100 text-red-800'
    };
    
    return (
      <span className={`px-2 py-1 rounded-full text-xs font-medium ${colors[status]}`}>
        {status.toUpperCase()}
      </span>
    );
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      {/* Header */}
      <div className="mb-8">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              Catalyst Trading System
            </h1>
            <p className="text-gray-600">
              AI-Native News-Driven Trading Platform
            </p>
          </div>
          <div className="flex gap-3">
            <button className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg flex items-center gap-2">
              <Play className="w-4 h-4" />
              Start Cycle
            </button>
            <button className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg flex items-center gap-2">
              <Square className="w-4 h-4" />
              Emergency Stop
            </button>
          </div>
        </div>
      </div>

      {/* Main Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
        
        {/* Workflow Status - Full Width */}
        <div className="lg:col-span-4">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-xl font-semibold flex items-center gap-2">
                <Activity className="w-5 h-5 text-blue-600" />
                Current Workflow
              </h2>
              <StatusBadge status="healthy" />
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">67%</div>
                <div className="text-sm text-gray-600">Progress</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">42</div>
                <div className="text-sm text-gray-600">Cycles Complete</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-600">5</div>
                <div className="text-sm text-gray-600">Active Positions</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-orange-600">Pattern Analysis</div>
                <div className="text-sm text-gray-600">Current Stage</div>
              </div>
            </div>
          </div>
        </div>

        {/* Trading Candidates */}
        <div className="lg:col-span-2">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
              <TrendingUp className="w-5 h-5 text-green-600" />
              Top Trading Candidates
            </h2>
            
            <div className="space-y-3">
              {candidates.map((candidate, idx) => (
                <div key={idx} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <div className="font-bold text-blue-600">{candidate.symbol}</div>
                    <div className="text-sm text-gray-600">{candidate.catalyst}</div>
                  </div>
                  <div className="text-right">
                    <div className="text-green-600 font-semibold">{candidate.confidence}</div>
                    <div className={`text-xs px-2 py-1 rounded ${
                      candidate.signal === 'BUY' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                    }`}>
                      {candidate.signal}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Active Positions */}
        <div className="lg:col-span-2">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
              <BarChart3 className="w-5 h-5 text-purple-600" />
              Active Positions
            </h2>
            
            <div className="space-y-3">
              {positions.map((position, idx) => (
                <div key={idx} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <div className="font-bold text-blue-600">{position.symbol}</div>
                    <div className="text-sm text-gray-600">{position.side}</div>
                  </div>
                  <div className="text-right">
                    <div className={`font-semibold ${
                      position.pnl.startsWith('+') ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {position.pnl}
                    </div>
                    <div className="text-sm text-gray-600">{position.price}</div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* System Health */}
        <div className="lg:col-span-4">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
              <Monitor className="w-5 h-5 text-blue-600" />
              System Health & Services
            </h2>
            
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
              {Object.entries(services).map(([service, status]) => (
                <div key={service} className="text-center p-3 bg-gray-50 rounded-lg">
                  <div className="font-medium capitalize mb-2">{service}</div>
                  <StatusBadge status={status} />
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Quick Actions */}
        <div className="lg:col-span-4">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <h2 className="text-xl font-semibold mb-4 flex items-center gap-2">
              <Settings className="w-5 h-5 text-gray-600" />
              Quick Actions
            </h2>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <button className="p-4 text-left border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                <div className="font-medium">Health Check</div>
                <div className="text-sm text-gray-600">Verify services</div>
              </button>
              
              <button className="p-4 text-left border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                <div className="font-medium">View Logs</div>
                <div className="text-sm text-gray-600">System diagnostics</div>
              </button>
              
              <button className="p-4 text-left border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                <div className="font-medium">Backup Data</div>
                <div className="text-sm text-gray-600">Create backup</div>
              </button>
              
              <button className="p-4 text-left border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                <div className="font-medium">Update Config</div>
                <div className="text-sm text-gray-600">Modify parameters</div>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CatalystDashboard;